# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# This workflow will initiate a Contrast Scan on your built artifact, and subsequently upload the results SARIF to Github.
# Because Contrast Scan is designed to run against your deployable artifact, you need to build an artifact that will be passed to the Contrast Scan Action.
# Contrast Scan currently supports Java, JavaScript and .NET artifacts.
# For more information about the Contrast Scan GitHub Action see here: https://github.com/Contrast-Security-OSS/contrastscan-action

# Pre-requisites:
# All Contrast related account secrets should be configured as GitHub secrets to be passed as inputs to the Contrast Scan Action.
# The required secrets are CONTRAST_API_KEY, CONTRAST_ORGANIZATION_ID and CONTRAST_AUTH_HEADER.

on:
  push:
    branches: [ "main" ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ "main" ]
  schedule:
    - cron: '26 16 * * 5'

permissions:
  contents: read

name: Scan analyze workflow
jobs:
  build-and-scan:
    permissions:
        contents: read # for actions/checkout
        security-events: write # for github/codeql-action/upload-sarif
        actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
    runs-on: ubuntu-latest
    # check out project
    steps:
    - uses: actions/checkout@v4
    # Since Contrast Scan is designed to run against your deployable artifact, the steps to build your artifact should go here.
    # -name: Build Project
    # ...
    # Scan Artifact
    - name: Contrast Scan Action
      uses: Contrast-Security-OSS/contrast-local-scan-action@main
      with:
        apiURL: ${{ secrets.CONTRAST__API__URL }}
        apiUserName: ${{ secrets.CONTRAST__API__USER_NAME }}
        apiKey: ${{ secrets.CONTRAST_API_KEY }}
        apiOrgId: ${{ secrets.CONTRAST_ORGANIZATION_ID }}
        apiServiceKey: ${{ secrets.CONTRAST__API__SERVICE_KEY }}
        resourceGroup: TaroScanCustomResourceGroup
